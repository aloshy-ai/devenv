name: "CI"

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  tests:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    permissions:
      # Required for pushing changes
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          # Required for pushing changes
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      
      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Initialize flake
        run: |
          if [ ! -f flake.lock ]; then
            nix flake update
            
            # Stage the lock file if it was created
            if [ -f flake.lock ]; then
              git add flake.lock
              git commit -m "chore: initialize flake.lock [skip ci]"
            fi
          fi
      
      - name: Check flake inputs
        run: nix flake check
      
      - name: Build development shell
        run: nix develop -c echo "Development shell successfully built"
      
      - name: Test basic commands
        run: |
          # Enter the dev shell and test some basic functionality
          nix develop -c bash -c '
            # Verify required packages are available
            command -v bun
            command -v node
            command -v supabase
            command -v docker
            
            # Verify environment variables are set
            test -n "$NEXT_PUBLIC_SUPABASE_URL"
            test -n "$NEXT_PUBLIC_SUPABASE_ANON_KEY"
            test -n "$SUPABASE_SERVICE_ROLE_KEY"
            
            # Test script availability (but don't run them as they require services)
            type start
            type stop
            type clean
            type reset-db
          '
      
      - name: Verify development tools
        run: |
          nix develop -c bash -c '
            # Verify language support
            command -v typescript-language-server
            command -v eslint
            command -v prettier
            command -v markdownlint
            
            # Verify pre-commit hooks are configured
            test -f .pre-commit-config.yaml
          '
      
      - name: Check for changes
        id: check-changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit and push changes
        if: steps.check-changes.outputs.changes == 'true' && github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        run: |
          # Stage all changes
          git add -A
          
          # Create commit with detailed message
          git commit -m "chore: update generated files from CI
          
          - Update pre-commit configuration
          - Update environment files
          - Update generated configs
          
          [skip ci]"
          
          # Push changes back to the repository
          git push origin HEAD